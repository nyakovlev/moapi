#!/bin/bash

if [[($1 == "--help") || ($1 == "-h") || ($1 == "")]]; then
	printf '\ngen-vuln [NAME OF VULNERABILITY] [NAME OF FOLDER]\n\nThis command is used to quickly generate vulnerability templates for the the AV18 Scoring Engine (MoaPI).\nTo use this command, simply run it in the following directory:\n\n/home/mittromney/Documents/KeepMe/AV18/scoring/data\n\nThe scoring engine will automatically find the vunerability. Once the command is called, you can enter the folder it generates and populate it with vulnerability information:\n\n./info is a text file containing a few vulnerability attributes: its name, the tutorial it corresponds to, and whether the system views it as a penalty.\n./tutorial.html is a page that you can populate with a tutorial to fix the vulnerability in question.\n./scoring.py is a script:\n\t- The "fix" command solves the vulnerability for you.\n\t- The "reset" function puts the vulnerability back in the system.\n\t- The "check" function returns a boolean based on whether the test returned positive.\n\nKeep in mind that the project is poorly-documented; questions or complaints can be emailed to Nikita Ioukovlev (former member of Talos) at nyakovlev99@gmail.com.\n\nGood luck in CyberPatriot this year!\n\n'
else
	printf "Generating vulnerability:\nName: ${1}\nFolder: ${2}\n"
	mkdir $2
	printf "title: ${1}\npenalty: False\nresource: None\n" > "${2}/info"
	printf "def fix():\n  pass\ndef reset():\n  pass\ndef check():\n  pass\n" > "${2}/scripts.py"
	chmod 755 "${2}/scripts.py"
	> "${2}/tutorial.html"
	echo "done"
fi
